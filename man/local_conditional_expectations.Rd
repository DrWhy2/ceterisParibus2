% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_conditional_expectations.R
\name{local_conditional_expectations}
\alias{local_conditional_expectations}
\alias{local_conditional_expectations.explainer}
\alias{local_conditional_expectations.default}
\title{Local Conditional Expectation Explainer}
\usage{
local_conditional_expectations(x, ...)

\method{local_conditional_expectations}{explainer}(x, new_observation,
  y = NULL, variables = NULL, variable_splits = NULL,
  grid_points = 101, ...)

\method{local_conditional_expectations}{default}(x, data,
  predict_function = predict, new_observation, y = NULL,
  variable_splits = NULL, variables = NULL, grid_points = 101,
  label = class(x)[1], ...)
}
\arguments{
\item{x}{a model to be explained, or an explainer created with function `DALEX::explain()`.}

\item{...}{other parameters}

\item{new_observation}{a new observation with columns that corresponds to variables used in the model}

\item{y}{true labels for `new_observation`. If specified then will be added to ceteris paribus plots.}

\item{variables}{names of variables for which profiles shall be calculated. Will be passed to `calculate_variable_splits()`. If NULL then all variables from the validation data will be used.}

\item{variable_splits}{named list of splits for variables, in most cases created with `calculate_variable_splits()`. If NULL then it will be calculated based on validation data avaliable in the `explainer`.}

\item{grid_points}{number of points for profile. Will be passed to `calculate_variable_splits()`.}

\item{data}{validation dataset, will be extracted from `x` if it's an explainer}

\item{predict_function}{predict function, will be extracted from `x` if it's an explainer}

\item{label}{name of the model. By default it's extracted from the 'class' attribute of the model}
}
\value{
An object of the class 'individual_variable_profile_explainer'.
A data frame with calculated LCE profiles.
}
\description{
This explainer works for individual observations.
For each observation it calculates Local Conditional Expectation (LCE) profiles for selected variables.
}
\examples{
library("DALEX")
 \dontrun{
library("randomForest")
set.seed(59)

apartments_rf_model <- randomForest(m2.price ~ construction.year + surface + floor +
      no.rooms + district, data = apartments)

explainer_rf <- explain(apartments_rf_model,
      data = apartments[,2:6], y = apartments$m2.price)

new_apartment <- apartments[1, ]

lce_rf <- local_conditional_expectations(explainer_rf, new_apartment)
lce_rf

lce_rf <- local_conditional_expectations(explainer_rf, new_apartment, y = new_apartment$m2.price)
lce_rf

plot(lce_rf)
}
}
