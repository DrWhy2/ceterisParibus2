% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ceteris_paribus.R
\name{plot.individual_variable_explainer}
\alias{plot.individual_variable_explainer}
\title{Plot Individual Variable Explanations}
\usage{
\method{plot}{individual_variable_explainer}(x, ..., size = 1, alpha = 0.3,
  color = "black", size_points = 2, alpha_points = 1,
  color_points = color, size_rugs = 0.5, alpha_rugs = 1,
  color_rugs = color, size_residuals = 1, alpha_residuals = 1,
  color_residuals = color, only_numerical = TRUE, show_profiles = TRUE,
  show_observations = TRUE, show_rugs = FALSE, show_residuals = FALSE,
  aggregate_profiles = NULL, facet_ncol = NULL, selected_variables = NULL)
}
\arguments{
\item{x}{a ceteris paribus explainer produced with function `individual_variable_profile()`}

\item{...}{other explainers that shall be plotted together}

\item{size}{a numeric. Size of lines to be plotted}

\item{alpha}{a numeric between 0 and 1. Opacity of lines}

\item{color}{a character. Either name of a color or name of a variable that should be used for coloring}

\item{size_points}{a numeric. Size of points to be plotted}

\item{alpha_points}{a numeric between 0 and 1. Opacity of points}

\item{color_points}{a character. Either name of a color or name of a variable that should be used for coloring}

\item{size_rugs}{a numeric. Size of rugs to be plotted}

\item{alpha_rugs}{a numeric between 0 and 1. Opacity of rugs}

\item{color_rugs}{a character. Either name of a color or name of a variable that should be used for coloring}

\item{size_residuals}{a numeric. Size of line and points to be plotted for residuals}

\item{alpha_residuals}{a numeric between 0 and 1. Opacity of points and lines for residuals}

\item{color_residuals}{a character. Either name of a color or name of a variable that should be used for coloring for residuals}

\item{only_numerical}{a logical. If TRUE then only numerical variables will be plotted. If FALSE then only categorical variables will be plotted.}

\item{show_profiles}{a logical. If TRUE then profiles will be plotted. Either individual or aggregate (see `aggregate_profiles`)}

\item{show_observations}{a logical. If TRUE then individual observations will be marked as points}

\item{show_rugs}{a logical. If TRUE then individual observations will be marked as rugs}

\item{show_residuals}{a logical. If TRUE then residuals will be plotted as a line ended with a point}

\item{aggregate_profiles}{function. If NULL (default) then individual profiles will be plotted. If a function (e.g. mean or median) then profiles will be aggregated and only the aggregate profile will be plotted}

\item{facet_ncol}{number of columns for the `facet_wrap()`}

\item{selected_variables}{if not NULL then only `selected_variables` will be presented}
}
\value{
a ggplot2 object
}
\description{
Function 'plot.individual_variable_explainer' plots Individual Variable Profiles for selected observations.
Various parameters help to decide what should be plotted, profiles, aggregated profiles, points or rugs.
}
\examples{
library("DALEX")
 \dontrun{
library("randomForest")
set.seed(59)

apartments_rf <- randomForest(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_rf <- explain(apartments_rf,
                        data = apartmentsTest[,2:6], y = apartmentsTest$m2.price)

apartments_lm <- lm(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_lm <- explain(apartments_lm,
                        data = apartmentsTest[,2:6], y = apartmentsTest$m2.price)

library("e1071")
apartments_svm <- svm(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_svm <- explain(apartments_svm,
                        data = apartmentsTest[,2:6], y = apartmentsTest$m2.price)

# individual explanations
my_apartment <- apartmentsTest[1, ]

# for random forest
lp_rf <- local_profile(explainer_rf, my_apartment)
lp_rf

plot(lp_rf)

# for others
lp_lm <- local_profile(explainer_lm, my_apartment)
plot(lp_rf, lp_lm, color = "_label_")

# for others
lp_svm <- local_profile(explainer_svm, my_apartment)
plot(lp_rf, lp_lm, lp_svm, color = "_label_")

# more parameters
plot(lp_rf, lp_lm, lp_svm, color = "_label_",
   show_profiles = TRUE, show_observations = TRUE,
   show_rugs = TRUE,
   alpha = 0.3, alpha_points = 1,
   size_points = 5, size_rugs = 0.5)

plot(lp_rf, show_profiles = TRUE, show_observations = TRUE,
   color = "black",
   selected_variables = c("construction.year", "surface"),
   alpha = 0.3, alpha_points = 1, alpha_residuals = 0.5,
   size_points = 5, size_rugs = 0.5)

plot(lp_rf, show_profiles = TRUE, show_observations = TRUE,
   color = "surface",
   selected_variables = c("construction.year", "surface"),
   alpha = 0.3, alpha_points = 1, alpha_residuals = 0.5,
   size_points = 5, size_rugs = 0.5)

plot(lp_rf, show_profiles = TRUE, show_observations = TRUE,
   color = "darkblue", aggregate_profiles = mean,
   selected_variables = c("construction.year", "surface"),
   alpha = 0.3, alpha_points = 1, alpha_residuals = 0.5,
   size_points = 5, size_rugs = 0.5)

# --------
# multiclass

HR_rf <- randomForest(status ~ . , data = HR)
explainer_rf <- explain(HR_rf,
                        data = HRTest,
                        y = HRTest)

my_HR <- HRTest[1, ]

lp_rf <- local_profile(explainer_rf,
                       my_HR)
lp_rf

plot(lp_rf, color = "_label_")
}
}
